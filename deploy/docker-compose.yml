version: '3.8'

services:
  db:
    container_name: ${PROJECT_NAME}_database
    image: postgres:14
    volumes:
      - ${PROJECT_NAME}_database_data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_HOST_PORT}:${POSTGRES_PORT}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: on-failure

  migrations:
    container_name: ${PROJECT_NAME}_migrations
    image: ${BASE_IMAGE}
    command: ["make", "migrate-up"]
    env_file:
      - .env
    depends_on:
      - db

  rabbitmq:
    container_name: ${PROJECT_NAME}_rabbitmq
    image: rabbitmq:3.11.10-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD}
    ports:
      - ${RABBIT_HOST_PORT}:${RABBIT_PORT}
      - ${RABBIT_MANAGE_HOST_PORT}:${RABBIT_MANAGE_PORT}
    volumes:
      - ${PROJECT_NAME}_rabbitmq_data:/var/lib/rabbitmq
    restart: always
    healthcheck:
        test: ["CMD", "rabbitmqctl", "status"]
        interval: 30s
        timeout: 10s
        retries: 5

  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - ${REDIS_HOST_PORT}:${REDIS_PORT}
    volumes:
      - ${PROJECT_NAME}_redis_data:/data
    command: redis-server --appendonly yes

  tg_bot:
    container_name: ${PROJECT_NAME}_tg_bot
    image: ${BASE_IMAGE}
    command: ["make", "run-tg-bot"]
    env_file:
      - .env
    depends_on:
      migrations:
        condition: service_started
      redis:
        condition: service_started
      tg_poller:
        condition: service_started
    
  
  api:
    container_name: ${PROJECT_NAME}_api
    image: ${BASE_IMAGE}
    command: ["make", "run-api"]
    env_file:
      - .env
    ports:
      - ${ADMIN_API_HOST_PORT}:${ADMIN_API_PORT}
    depends_on:
      migrations:
        condition: service_started 
      tg_bot:
        condition: service_started

  tg_poller:
    container_name: ${PROJECT_NAME}_tg_poller
    image: ${BASE_IMAGE}
    command: ["make", "run-tg-poller"]
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy

    restart: on-failure
  
volumes:
 black_jack_database_data:
 black_jack_rabbitmq_data:
 black_jack_redis_data: